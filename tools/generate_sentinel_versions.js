var http = require('https');
var fs = require('fs');
var path = require('path');

console.log(`Running ${__filename}`)

const scriptDir = __dirname;
const root = path.join(scriptDir, "..");
const outFile = path.join(root, "features", "versions_generated.go");

function getUrlAsPromise(url) {
  return new Promise((resolve, reject) => {
    console.log(`Attempting to download ${url} ...`);
    http.get(url, (response) => {
      let chunksOfData = [];

      response.on('data', (fragments) => {
        chunksOfData.push(fragments);
      });

      response.on('end', () => {
        let responseBody = Buffer.concat(chunksOfData);
        resolve({
          resultCode: response.statusCode,
          redirect: response.headers.location,
          body: responseBody.toString()
        });
      });

      response.on('error', (error) => {
        reject(error);
      });
    });
  });
}


async function getSentinelVersions() {
  const url = `https://releases.hashicorp.com/sentinel`;
  const content = await getUrlAsPromise(url);

  // We don't care about patch versions
  const re = /href="\/sentinel\/[\d\.]+\//g
  const matches = content.body.match(re)

  let versions = ""
  matches.forEach(text => {
    text = text.substring(16, text.length - 1)
    versions += `\t"v${text}",\n`
  });

  let fileContent = `package features

// Autogenerated using generate_sentinel_versions.js
// DO NOT MODIFY MANUALLY

var SentinelVersions = []string{
${versions}
}
`
  console.log(`Writing ${outFile}...`);
  fs.writeFileSync(outFile, fileContent, { encoding: "utf8" });
  //cp.execSync(`go fmt ${outFile}`);
}

(async function () {
  console.log("Getting sentinel versions...");

  await getSentinelVersions()

  //process.exit(0);
})();